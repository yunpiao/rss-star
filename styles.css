/* ==============================================
   流星容器 - 流星动画的父容器
   ==============================================
   作用：作为所有流星元素的定位参考点
   position: absolute - 绝对定位，相对于最近的已定位父元素
   top: 0, left: 0 - 容器左上角对齐父元素的左上角
   width: 100%, height: 100% - 占满整个父容器
   z-index: 1 - 层级较低，在星星之上，流星本体之下
   pointer-events: none - 禁用鼠标事件，不影响星星的交互
   overflow: hidden - 防止流星超出容器边界
   ============================================== */
.meteor-container {
    position: absolute;      /* 绝对定位 */
    top: 0;                  /* 距离顶部0像素 */
    left: 0;                 /* 距离左侧0像素 */
    width: 100%;            /* 宽度占满容器100% */
    height: 100%;           /* 高度占满容器100% */
    z-index: 1;             /* 层级为1 */
    pointer-events: none;   /* 禁用鼠标事件 */
    overflow: hidden;       /* 隐藏超出部分 */
}

/* ==============================================
   流星本体样式 - 基础流星的外观定义
   ==============================================
   作用：定义流星的基本形状、光晕和定位
   position: absolute - 绝对定位，可以任意放置在容器中
   width: 3px, height: 3px - 流星的核心点大小
   background: radial-gradient - 径向渐变，从白色到透明，模拟光球效果
   border-radius: 50% - 圆形，配合渐变形成光球
   box-shadow - 多层阴影，创造光晕效果（近、中、远三层）
   z-index: 1 - 层级为1，在容器之上
   ============================================== */
.meteor {
    position: absolute;      /* 绝对定位 */
    width: 3px;             /* 宽度3像素 */
    height: 3px;            /* 高度3像素 */
    background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0.8) 30%, transparent 70%);
                            /* 径向渐变背景，从白色到透明，模拟光球 */
    border-radius: 50%;     /* 圆角半径50%，形成圆形 */
    box-shadow:              /* 多层阴影，创造光晕效果 */
        0 0 6px rgba(255, 255, 255, 0.8),   /* 第一层光晕：6px模糊，80%不透明度 */
        0 0 12px rgba(255, 255, 255, 0.6),  /* 第二层光晕：12px模糊，60%不透明度 */
        0 0 18px rgba(255, 255, 255, 0.4);  /* 第三层光晕：18px模糊，40%不透明度 */
    z-index: 1;             /* 层级为1 */
}

/* ==============================================
   流星尾迹系统 - 动态视觉效果
   ==============================================

   特性说明：
   - 动态长度控制：通过CSS变量 --tail-length 调整
   - 透明度渐变：--tail-opacity-start 和 --tail-opacity-end 控制
   - 视觉层次：z-index: -1 确保在流星本体下方
   - 性能优化：使用transform-origin优化渲染

   使用方式：
   - 快速流星：透明度 0.2 → 0.9，营造速度感
   - 变速流星：透明度 0.1 → 1.0，更丰富的视觉变化
   - 爆闪流星：透明度 0.3 → 1.2，增强冲击力
   ============================================== */
.meteor::before {
    content: '';                    /* 伪元素必须设置content属性 */
    position: absolute;             /* 绝对定位 */
    top: 50%;                       /* 距离顶部50%（垂直居中） */
    left: 50%;                      /* 距离左侧50%（水平居中） */
    transform: translate(-50%, -50%); /* 向左上移动自身尺寸的50%，实现真正的居中 */
    width: var(--tail-length, 80px); /* 尾迹长度，使用CSS变量，默认80px */
    height: 2px;                   /* 尾迹高度2px */
    background: linear-gradient(    /* 线性渐变背景 */
        90deg,                      /* 渐变方向：从左到右（90度） */
        transparent 0%,             /* 起点完全透明 */
        rgba(255, 255, 255, var(--tail-opacity-start, 0.1)) 20%, /* 20%位置开始出现 */
        rgba(255, 255, 255, var(--tail-opacity-end, 0.8)) 80%,   /* 80%位置最亮 */
        rgba(255, 255, 255, 1) 100% /* 终点最亮 */
    );
    border-radius: 2px;            /* 圆角2px，柔化边缘 */
    transform-origin: right center; /* 变换原点设在右侧中心，方便旋转 */
    z-index: -1;                   /* 层级为-1，在流星本体下方 */
}

/* ==============================================
   流星运动动画 - 更自然的亮度和速度变化
   ==============================================
   作用：定义流星从出现到消失的完整动画过程
   @keyframes - 定义关键帧动画，meteor-fall是动画名称
   百分比 - 表示动画进度（0%开始，100%结束）
   transform: translate() - 平移变换，移动流星位置
   rotate(45deg) - 旋转45度，模拟流星倾斜角度
   opacity - 透明度变化，控制可见性
   filter: brightness() - 亮度滤镜，控制发光强度
   ============================================== */
@keyframes meteor-fall {
    0% {  /* 动画开始时 */
        transform: translate(0, 0) rotate(45deg);  /* 在原点，旋转45度 */
        opacity: 0;                                /* 完全透明 */
        filter: brightness(0.3);                   /* 亮度30% */
    }
    5% {  /* 动画进行到5%时 */
        opacity: 0.2;                              /* 透明度20% */
        filter: brightness(0.5);                   /* 亮度50% */
    }
    15% { /* 动画进行到15%时 */
        opacity: 0.6;                              /* 透明度60% */
        filter: brightness(0.8);                   /* 亮度80% */
    }
    35% { /* 动画进行到35%时 */
        opacity: 1;                                /* 完全不透明 */
        filter: brightness(1.5);                   /* 亮度150%，高光时刻 */
    }
    65% { /* 动画进行到65%时 */
        opacity: 1;                                /* 保持不透明 */
        filter: brightness(1.2);                   /* 亮度120% */
    }
    85% { /* 动画进行到85%时 */
        opacity: 0.7;                              /* 透明度70% */
        filter: brightness(0.9);                   /* 亮度90% */
    }
    95% { /* 动画进行到95%时 */
        opacity: 0.3;                              /* 透明度30% */
        filter: brightness(0.5);                   /* 亮度50% */
    }
    100% { /* 动画结束时 */
        transform: translate(var(--end-x, 800px), var(--end-y, 800px)) rotate(45deg);
        /* 移动到终点位置，使用CSS变量，默认800px，保持45度旋转 */
        opacity: 0;                                /* 完全透明，消失 */
        filter: brightness(0.2);                   /* 亮度20% */
    }
}

/* ==============================================
   爆闪流星动画 - 增强冲击力的特殊效果
   ==============================================
   作用：比普通流星更亮的动画，带有额外的光晕爆发效果
   特点：亮度更高，透明度可超过1.0，增加额外的光晕效果
   box-shadow: 使用currentColor继承当前颜色，创造更强的光效
   ============================================== */
@keyframes meteor-burst {
    0% {  /* 动画开始 */
        transform: translate(0, 0) rotate(45deg);  /* 原点位置，45度倾斜 */
        opacity: 0;                                /* 完全透明 */
        filter: brightness(0.3);                   /* 亮度30% */
    }
    5% {  /* 开始出现 */
        opacity: 0.2;                              /* 透明度20% */
        filter: brightness(0.5);                   /* 亮度50% */
    }
    15% { /* 逐渐变亮 */
        opacity: 0.6;                              /* 透明度60% */
        filter: brightness(0.8);                   /* 亮度80% */
    }
    30% { /* 达到全亮 */
        opacity: 1;                                /* 完全不透明 */
        filter: brightness(1.5);                   /* 亮度150% */
    }
    45% { /* 爆闪高峰 */
        opacity: 1.2;                              /* 透明度120%，轻微过曝效果 */
        filter: brightness(2.5);                   /* 亮度250%，超亮 */
        box-shadow:                                /* 增强的光晕效果 */
            0 0 20px currentColor,                 /* 第一层：20px模糊，使用继承色 */
            0 0 40px currentColor,                 /* 第二层：40px模糊，使用继承色 */
            0 0 60px rgba(255, 255, 255, 0.8);    /* 第三层：60px模糊，白色80%透明度 */
    }
    50% { /* 爆闪后稍降 */
        opacity: 1;                                /* 恢复正常透明度 */
        filter: brightness(1.8);                   /* 亮度180% */
    }
    70% { /* 维持高亮 */
        opacity: 1;                                /* 保持不透明 */
        filter: brightness(1.2);                   /* 亮度120% */
    }
    85% { /* 开始衰减 */
        opacity: 0.7;                              /* 透明度70% */
        filter: brightness(0.9);                   /* 亮度90% */
    }
    95% { /* 即将消失 */
        opacity: 0.3;                              /* 透明度30% */
        filter: brightness(0.5);                   /* 亮度50% */
    }
    100% { /* 完全消失 */
        transform: translate(var(--end-x, 800px), var(--end-y, 800px)) rotate(45deg);
        /* 移动到终点 */
        opacity: 0;                                /* 完全透明 */
        filter: brightness(0.2);                   /* 亮度20% */
    }
}

/* ==============================================
   变速动画 - 先快后慢的运动效果
   ==============================================
   作用：模拟流星速度变化，先加速后减速的自然运动
   animation-timing-function - 动画时间函数，控制速度变化
   ease-in: 慢到快  ease-out: 快到慢  linear: 匀速
   ============================================== */
@keyframes meteor-variable-speed {
    0% {  /* 开始阶段 */
        transform: translate(0, 0) rotate(45deg);  /* 原点位置，45度倾斜 */
        opacity: 0;                                /* 完全透明 */
        filter: brightness(0.3);                   /* 亮度30% */
        animation-timing-function: ease-in;        /* 速度：慢到快 */
    }
    20% { /* 加速阶段 */
        opacity: 0.8;                              /* 透明度80% */
        filter: brightness(1.2);                   /* 亮度120% */
        animation-timing-function: ease-out;       /* 速度：快到慢 */
    }
    40% { /* 全速阶段 */
        opacity: 1;                                /* 完全不透明 */
        filter: brightness(1.5);                   /* 亮度150% */
        animation-timing-function: linear;         /* 速度：匀速 */
    }
    70% { /* 减速阶段 */
        opacity: 1;                                /* 保持不透明 */
        filter: brightness(1.2);                   /* 亮度120% */
        animation-timing-function: ease-in;        /* 速度：慢到快（准备减速） */
    }
    90% { /* 最终减速 */
        opacity: 0.5;                              /* 透明度50% */
        filter: brightness(0.7);                   /* 亮度70% */
        animation-timing-function: ease-out;       /* 速度：快到慢 */
    }
    100% { /* 结束 */
        transform: translate(var(--end-x, 800px), var(--end-y, 800px)) rotate(45deg);
        /* 移动到终点 */
        opacity: 0;                                /* 完全透明 */
        filter: brightness(0.2);                   /* 亮度20% */
    }
}

/* ==============================================
   不同大小的流星样式 - 提供视觉层次感
   ==============================================
   作用：根据大小应用不同的动画和视觉效果
   小流星：最常见，较短动画时间
   中流星：中等大小，标准动画时间
   大流星：最大最亮，使用变速动画和增强光晕
   ============================================== */

/* 小流星 - 最常见的小型流星 */
.meteor-small {
    width: 2px;                      /* 宽度2像素 */
    height: 2px;                     /* 高度2像素 */
    animation: meteor-fall 1.5s linear; /* 使用基础动画，1.5秒，匀速 */
}

/* 小流星的尾迹样式 */
.meteor-small::before {
    width: 60px;                     /* 尾迹长度60px */
    height: 1.5px;                   /* 尾迹高度1.5px */
}

/* 中等流星 - 标准大小 */
.meteor-medium {
    width: 3px;                      /* 宽度3像素 */
    height: 3px;                     /* 高度3像素 */
    animation: meteor-fall 2s linear; /* 使用基础动画，2秒，匀速 */
}

/* 中等流星的尾迹样式 */
.meteor-medium::before {
    width: 80px;                     /* 尾迹长度80px */
    height: 2px;                     /* 尾迹高度2px */
}

/* 大流星 - 最大最亮的流星 */
.meteor-large {
    width: 4px;                      /* 宽度4像素 */
    height: 4px;                     /* 高度4像素 */
    animation: meteor-variable-speed 2.5s ease-in-out; /* 使用变速动画，2.5秒，缓进缓出 */
    box-shadow:                      /* 增强的光晕效果 */
        0 0 8px rgba(255, 255, 255, 0.9),   /* 第一层：8px模糊，90%不透明度 */
        0 0 16px rgba(255, 255, 255, 0.7),  /* 第二层：16px模糊，70%不透明度 */
        0 0 24px rgba(255, 255, 255, 0.5);  /* 第三层：24px模糊，50%不透明度 */
}

/* 大流星的尾迹样式 */
.meteor-large::before {
    width: 100px;                    /* 尾迹长度100px */
    height: 2.5px;                   /* 尾迹高度2.5px */
}

/* ==============================================
   爆闪流星样式 - 特殊的视觉冲击效果
   ==============================================
   作用：提供比普通流星更强的视觉冲击力
   特点：使用专门的爆闪动画，中间会有亮度爆发
   ============================================== */

/* 爆闪流星本体样式 */
.meteor-burst {
    width: 3px;                      /* 宽度3像素 */
    height: 3px;                     /* 高度3像素 */
    animation: meteor-burst 2.2s ease-in-out; /* 使用爆闪动画，2.2秒，缓进缓出 */
}

/* 爆闪流星的尾迹样式 */
.meteor-burst::before {
    width: 90px;                     /* 尾迹长度90px */
    height: 2px;                     /* 尾迹高度2px */
}

/* ==============================================
   金色流星特效 - 稀有视觉盛宴
   ==============================================

   设计理念：
   - 纯金色渐变：从实心金色到透明的优雅过渡
   - 多层光晕：三层box-shadow营造立体光效
   - 爆闪动画：2.8秒的华丽运动轨迹
   - 稀有度：权重仅为2.5%，增添惊喜感

   视觉特性：
   - 颜色：经典的金色 (255, 215, 0)
   - 强度：最高亮度1.0，营造强烈视觉冲击
   - 动效：burst类型，快速明暗变化
   - 尾迹：120px超长，增强速度感
   ============================================== */

/* 金色流星本体样式 */
.meteor-golden {
    background: radial-gradient(circle, rgba(255, 215, 0, 1) 0%, rgba(255, 215, 0, 0.8) 30%, transparent 70%);
    /* 径向渐变背景，金色从实心到透明 */
    box-shadow:                      /* 金色的多层光晕 */
        0 0 6px rgba(255, 215, 0, 0.8),   /* 第一层：金色，6px模糊，80%透明度 */
        0 0 12px rgba(255, 215, 0, 0.6),  /* 第二层：金色，12px模糊，60%透明度 */
        0 0 18px rgba(255, 215, 0, 0.4);  /* 第三层：金色，18px模糊，40%透明度 */
    animation: meteor-burst 2.8s ease-in-out; /* 爆闪动画，2.8秒，更长的持续时间 */
}

/* 金色流星尾迹 - 豪华视觉效果 */
.meteor-golden::before {
    background: linear-gradient(    /* 金色的线性渐变尾迹 */
        90deg,                      /* 方向：从左到右 */
        transparent 0%,             /* 起点透明 */
        rgba(255, 215, 0, var(--tail-opacity-start, 0.1)) 20%, /* 20%位置开始金色 */
        rgba(255, 215, 0, var(--tail-opacity-end, 0.8)) 80%,   /* 80%位置金色最亮 */
        rgba(255, 215, 0, 1) 100%  /* 终点纯金色 */
    );
}

/* ==============================================
   蓝色流星样式 - 清新冷色调效果
   ==============================================
   作用：提供冷色调的流星视觉效果
   特点：使用蓝色系渐变，营造清新冷峻的感觉
   ============================================== */

/* 蓝色流星本体样式 */
.meteor-blue {
    background: radial-gradient(circle, rgba(100, 200, 255, 1) 0%, rgba(100, 200, 255, 0.8) 30%, transparent 70%);
    /* 径向渐变背景，蓝色从实心到透明 */
    box-shadow:                      /* 蓝色的多层光晕 */
        0 0 6px rgba(100, 200, 255, 0.8),   /* 第一层：蓝色，6px模糊，80%透明度 */
        0 0 12px rgba(100, 200, 255, 0.6),  /* 第二层：蓝色，12px模糊，60%透明度 */
        0 0 18px rgba(100, 200, 255, 0.4);  /* 第三层：蓝色，18px模糊，40%透明度 */
    animation: meteor-variable-speed 3s ease-in-out; /* 变速动画，3秒，更长的持续时间 */
}

/* 蓝色流星尾迹样式 */
.meteor-blue::before {
    background: linear-gradient(    /* 蓝色的线性渐变尾迹 */
        90deg,                      /* 方向：从左到右 */
        transparent 0%,             /* 起点透明 */
        rgba(100, 200, 255, 0.1) 20%, /* 20%位置浅蓝色 */
        rgba(100, 200, 255, 0.4) 40%, /* 40%位置中等蓝色 */
        rgba(100, 200, 255, 0.8) 80%, /* 80%位置深蓝色 */
        rgba(100, 200, 255, 1) 100%  /* 终点纯蓝色 */
    );
}

/* ==============================================
   全局CSS重置 - 统一浏览器默认样式
   ==============================================
   作用：消除不同浏览器间的默认样式差异
   * - 通用选择器，选择所有元素
   box-sizing: border-box - 让元素的宽高包含边框和内边距
   ============================================== */
* {
    margin: 0;                       /* 外边距归零 */
    padding: 0;                      /* 内边距归零 */
    box-sizing: border-box;          /* 盒模型：宽高包含边框和内边距 */
}

/* ==============================================
   页面基础样式 - 设置全局字体和布局
   ==============================================
   font-family: 系统默认字体栈，从macOS到Windows的兼容性
   overflow: hidden - 隐藏超出视口的内容，防止滚动条
   ============================================== */
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    /* 字体栈：优先使用系统默认字体，依次降级 */
    overflow: hidden;                /* 隐藏超出部分，防止页面滚动 */
}

/* ==============================================
   星空容器 - 主视觉区域
   ==============================================

   设计说明：
   - 全屏布局：100vw x 100vh 覆盖整个视口
   - 背景图片：使用高清星空背景 'image.png'
   - 定位基准：relative 为绝对定位的星星提供参考
   - 溢出隐藏：确保所有元素都在容器内
   - 鼠标样式：default 保持系统默认光标

   背景图片变更记录：
   - 原版本：'a.jpeg' (备用图片)
   - 当前版本：'image.png' (高清星空背景)
   - 效果：更好的视觉质量和色彩表现
   ============================================== */
.starsky-container {
    position: relative;              /* 相对定位，作为子元素的定位基准 */
    width: 100vw;                   /* 宽度100%视口宽度 */
    height: 100vh;                  /* 高度100%视口高度 */
    background: #000000 url('1756453399.png') center/cover no-repeat;
    /* 背景：黑色底色 + 星空图片，居中显示，覆盖整个容器，不重复 */
    overflow: hidden;               /* 隐藏超出容器部分 */
    cursor: default;                /* 使用系统默认鼠标指针 */
}

/* ==============================================
   星空光晕系统 - 多层次光效设计
   ==============================================

   设计理念：
   - 每个等级的星星都有独特的颜色光晕系统
   - 使用box-shadow创建外层光圈效果
   - 使用伪元素::after创建内层光晕层
   - 不同等级有不同的动画速度和强度
   - 随机延时让星空更自然生动

   等级系统：
   - 微星：纯白光晕，简洁优雅
   - 小星：蓝色系光晕，清新淡雅
   - 中星：橙色系光晕，温暖明亮
   - 亮星：金黄色系光晕，璀璨夺目
   - 超星：纯金色光晕，至高无上的存在
   ============================================== */

/* ==============================================
   星星基础样式 - 所有星星的共同属性
   ==============================================
   作用：定义星星的基本外观和交互行为
   data-level属性：用于区分不同等级的星星
   background-image: 使用星形图片作为背景
   ============================================== */

/* 星星基础样式 */
.star {
    position: absolute;              /* 绝对定位，可以任意放置 */
    width: 24px;                    /* 星星宽度24像素 */
    height: 24px;                   /* 星星高度24像素 */
    background-image: url('1756459090.png'); /* 背景图片：星形图案 */
    background-size: cover;         /* 背景图片大小：覆盖整个元素 */
    background-position: center;    /* 背景图片位置：居中对齐 */
    z-index: 10;                    /* 层级为10，高于流星 */
    pointer-events: auto;           /* 启用鼠标事件，可以点击 */
    cursor: pointer;                /* 鼠标悬停时显示手型指针 */
    transition: all 0.3s ease;      /* 所有属性变化时使用0.3秒缓动效果 */
    /* 移除所有光晕效果 */
    box-shadow: none;
    filter: none;
}

/* ==============================================
   微星伪元素光晕 - 最基础的白色光晕效果
   ==============================================
   作用：为微星创建内层发光效果
   ::after伪元素：创建一个额外的光晕层
   radial-gradient: 径向渐变，从中心向外扩散
   ============================================== */

/* 微星伪元素光晕 - 临时禁用 */
.star[data-level="微星"]::after {
    display: none; /* 禁用光晕 */
}

/* ==============================================
   小星伪元素光晕 - 蓝色系清新光晕效果
   ==============================================
   作用：为小星创建淡蓝色调的光晕
   特点：使用蓝色系渐变，营造清新淡雅的感觉
   颜色值：170, 204, 255 是淡蓝色RGB值
   ============================================== */

/* 小星伪元素光晕 - 临时禁用 */
.star[data-level="小星"]::after {
    display: none; /* 禁用光晕 */
}

/* ==============================================
   中星伪元素光晕 - 橙色系温暖光晕效果
   ==============================================
   作用：为中星创建橙色调的光晕
   特点：使用橙色系渐变，营造温暖明亮的感觉
   颜色值：255, 204, 170 是橙色RGB值
   ============================================== */

/* 中星伪元素光晕 - 临时禁用 */
.star[data-level="中星"]::after {
    display: none; /* 禁用光晕 */
}

/* ==============================================
   亮星伪元素光晕 - 纯白色增强光晕效果
   ==============================================
   作用：为亮星创建更强的白色光晕
   特点：尺寸更小但更亮，使用专门的亮星动画
   尺寸：5x5px，比其他等级更小更集中
   ============================================== */

/* 亮星伪元素光晕 - 临时禁用 */
.star[data-level="亮星"]::after {
    display: none; /* 禁用光晕 */
}

/* ==============================================
   超星伪元素光晕 - 至高无上的白色光晕效果
   ==============================================
   作用：为超星创建最强的白色光晕
   特点：尺寸最小但最亮，完全不透明，使用旋转动画
   animation-delay: 使用CSS变量控制动画延时，让每个超星都有不同的节奏
   ============================================== */

/* 超星伪元素光晕 - 临时禁用 */
.star[data-level="超星"]::after {
    display: none; /* 禁用光晕 */
}

/* ==============================================
   中心光晕脉动动画 - 普通星星的呼吸效果
   ==============================================
   作用：为普通星星（微星、小星、中星）创建柔和的脉动效果
   transform: scale() - 缩放变换，1.2倍放大
   opacity - 透明度变化，营造呼吸感
   0%和100%相同：确保动画循环无缝
   ============================================== */

/* 中心光晕脉动动画 - 普通星星 */
@keyframes center-glow-pulse {
    0%, 100% {  /* 开始和结束状态相同 */
        transform: translate(-50%, -50%) scale(1);  /* 居中，不缩放 */
        opacity: 0.7;                               /* 中等透明度 */
    }
    50% {  /* 中间状态，达到最大亮度和缩放 */
        transform: translate(-50%, -50%) scale(1.2); /* 居中，放大1.2倍 */
        opacity: 1;                                  /* 完全不透明 */
    }
}

/* ==============================================
   亮星光晕脉动动画 - 更精细的呼吸效果
   ==============================================
   作用：为亮星创建更精细的四阶段脉动效果
   特点：有四个关键点，变化更丰富
   25%、50%、75% - 三个中间状态
   ============================================== */

/* 亮星光晕脉动动画 */
@keyframes bright-star-glow-pulse {
    0%, 100% {  /* 开始和结束状态相同 */
        transform: translate(-50%, -50%) scale(1);  /* 居中，不缩放 */
        opacity: 0.9;                               /* 高透明度 */
    }
    25% {  /* 第一阶段 */
        transform: translate(-50%, -50%) scale(1.1); /* 放大1.1倍 */
        opacity: 1;                                  /* 完全不透明 */
    }
    50% {  /* 第二阶段，达到最大缩放 */
        transform: translate(-50%, -50%) scale(1.15); /* 放大1.15倍 */
        opacity: 1;                                  /* 保持不透明 */
    }
    75% {  /* 第三阶段 */
        transform: translate(-50%, -50%) scale(1.1); /* 缩小回1.1倍 */
        opacity: 1;                                  /* 保持不透明 */
    }
}

/* ==============================================
   超星光晕脉动动画 - 旋转缩放的华丽效果
   ==============================================
   作用：为超星创建旋转+缩放的华丽动画效果
   特点：结合旋转和缩放，营造星光璀璨的感觉
   rotate角度：每20%旋转72度（360/5），形成五角星般的旋转效果
   缩放：从1到1.25再回到1，营造脉动感
   ============================================== */

/* 超星光晕脉动动画 */
@keyframes super-star-glow-pulse {
    0% {  /* 起始状态 */
        transform: translate(-50%, -50%) scale(1) rotate(0deg);  /* 居中，不缩放，不旋转 */
        opacity: 1;                                              /* 完全不透明 */
    }
    20% { /* 第一阶段：轻微放大，开始旋转 */
        transform: translate(-50%, -50%) scale(1.1) rotate(72deg); /* 放大1.1倍，旋转72度 */
        opacity: 1;                                               /* 保持不透明 */
    }
    40% { /* 第二阶段：继续放大，旋转144度 */
        transform: translate(-50%, -50%) scale(1.2) rotate(144deg); /* 放大1.2倍，旋转144度 */
        opacity: 1;                                                /* 保持不透明 */
    }
    60% { /* 第三阶段：最大放大，旋转216度 */
        transform: translate(-50%, -50%) scale(1.25) rotate(216deg); /* 放大1.25倍，旋转216度 */
        opacity: 1;                                                 /* 保持不透明 */
    }
    80% { /* 第四阶段：开始缩小，旋转288度 */
        transform: translate(-50%, -50%) scale(1.15) rotate(288deg); /* 缩小到1.15倍，旋转288度 */
        opacity: 1;                                                 /* 保持不透明 */
    }
    100% { /* 结束状态：回到原大小，完成一圈旋转 */
        transform: translate(-50%, -50%) scale(1) rotate(360deg); /* 恢复原大小，旋转360度 */
        opacity: 1;                                               /* 保持不透明 */
    }
}

/* ==============================================
   星星头像样式 - 鼠标悬停时显示的头像
   ==============================================
   作用：当鼠标悬停在星星上时显示用户头像或文字
   默认隐藏：opacity: 0, visibility: hidden
   display: flex - 使用弹性布局居中内容
   border-radius: 50% - 圆形头像
   ============================================== */

/* 星星头像样式 - 默认隐藏 */
.star-avatar {
    position: absolute;              /* 绝对定位 */
    top: 50%;                        /* 距离顶部50% */
    left: 50%;                       /* 距离左侧50% */
    transform: translate(-50%, -50%); /* 向左上移动50%，实现居中 */
    width: 16px;                     /* 头像宽度16px */
    height: 16px;                    /* 头像高度16px */
    border-radius: 50%;              /* 圆角50%，形成圆形 */
    border: 2px solid rgba(255, 255, 255, 0.8); /* 白色边框，80%透明度 */
    background: rgba(255, 255, 255, 0.9); /* 白色背景，90%透明度 */
    display: flex;                   /* 弹性布局 */
    align-items: center;             /* 垂直居中 */
    justify-content: center;         /* 水平居中 */
    font-size: 8px;                  /* 字体大小8px */
    font-weight: bold;               /* 粗体 */
    color: #333;                     /* 深灰色文字 */
    z-index: 50;                     /* 层级50，高于星星 */
    overflow: hidden;                /* 隐藏超出部分 */
    transition: all 0.3s ease;       /* 所有属性变化使用0.3秒缓动 */
    box-shadow: 0 0 6px rgba(255, 255, 255, 0.5); /* 白色阴影 */
    pointer-events: auto;            /* 启用鼠标事件 */
    opacity: 0;                      /* 默认隐藏 */
    visibility: hidden;              /* 默认隐藏 */
}

/* ==============================================
   头像图片样式 - 当头像包含图片时
   ==============================================
   object-fit: cover - 图片等比例缩放并填充容器
   border-radius: 50% - 保持圆形
   ============================================== */

.star-avatar img {
    width: 100%;                     /* 图片宽度100% */
    height: 100%;                    /* 图片高度100% */
    object-fit: cover;               /* 图片等比例缩放并覆盖整个容器 */
    border-radius: 50%;              /* 圆角50%，保持圆形 */
}

/* ==============================================
   头像包含图片时的增强样式
   ==============================================
   :has() 选择器：当头像包含img元素时应用这些样式
   增强边框和阴影：让有图片的头像更突出
   ============================================== */

.star-avatar:has(img) {
    border: 2px solid rgba(255, 255, 255, 0.9);   /* 更亮的边框 */
    box-shadow: 0 0 12px rgba(255, 255, 255, 0.7); /* 更强的阴影 */
}

/* ==============================================
   文字头像样式 - 当头像显示文字时
   ==============================================
   linear-gradient: 线性渐变背景，从蓝色到紫色
   text-shadow: 文字阴影，增强可读性
   inset box-shadow: 内阴影，增加立体感
   ============================================== */

.star-avatar.text-avatar {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    /* 线性渐变背景，从蓝色到紫色，135度倾斜 */
    color: white;                    /* 白色文字 */
    text-shadow: 0 1px 2px rgba(0,0,0,0.3); /* 文字阴影，增加立体感 */
    border: 2px solid rgba(255, 255, 255, 0.9); /* 白色边框 */
    box-shadow: 0 0 12px rgba(255, 255, 255, 0.7), inset 0 0 8px rgba(255, 255, 255, 0.2);
    /* 外阴影 + 内阴影，营造发光和凹陷效果 */
}

/* ==============================================
   不同等级星星的头像大小 - 根据星星等级调整头像尺寸
   ==============================================
   作用：不同等级的星星有不同大小的头像
   等级越高：头像越大，字体越大，边框越粗
   亮星和超星：有额外的视觉增强效果
   ============================================== */

/* 微星头像 - 最小的头像尺寸 */
.star[data-level="微星"] .star-avatar {
    width: 12px;                     /* 宽度12px */
    height: 12px;                    /* 高度12px */
    font-size: 8px;                  /* 字体8px */
    border-width: 1px;               /* 边框1px */
}

/* 小星头像 - 标准小头像 */
.star[data-level="小星"] .star-avatar {
    width: 16px;                     /* 宽度16px */
    height: 16px;                    /* 高度16px */
    font-size: 10px;                 /* 字体10px */
    border-width: 2px;               /* 边框2px */
}

/* 中星头像 - 中等大小头像 */
.star[data-level="中星"] .star-avatar {
    width: 18px;                     /* 宽度18px */
    height: 18px;                    /* 高度18px */
    font-size: 11px;                 /* 字体11px */
    border-width: 2px;               /* 边框2px */
}

/* 亮星头像 - 较大头像，增强视觉效果 */
.star[data-level="亮星"] .star-avatar {
    width: 22px;                     /* 宽度22px */
    height: 22px;                    /* 高度22px */
    font-size: 12px;                 /* 字体12px */
    border-width: 2px;               /* 边框2px */
    border-color: rgba(255, 255, 255, 0.9); /* 更亮的边框 */
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.6); /* 增强阴影 */
}

/* 超星头像 - 最大最亮的头像 */
.star[data-level="超星"] .star-avatar {
    width: 26px;                     /* 宽度26px */
    height: 26px;                    /* 高度26px */
    font-size: 14px;                 /* 字体14px */
    border-width: 3px;               /* 边框3px，最粗 */
    border-color: rgba(255, 255, 255, 1); /* 纯白色边框 */
    box-shadow: 0 0 12px rgba(255, 255, 255, 0.8); /* 最强的阴影 */
}

/* ==============================================
   星星hover时显示头像 - 鼠标悬停交互效果
   ==============================================
   作用：当鼠标悬停在星星上时显示头像
   opacity: 1, visibility: visible - 显示头像
   transform: scale(1) - 确保缩放回到正常状态
   ============================================== */

/* 星星hover时显示头像 */
.star:hover .star-avatar {
    opacity: 1;                      /* 显示头像 */
    visibility: visible;             /* 可见 */
    transform: translate(-50%, -50%) scale(1); /* 居中，正常大小 */
}

/* ==============================================
   头像hover效果 - 头像本身的悬停放大效果
   ==============================================
   作用：当鼠标悬停在头像上时放大头像
   scale(1.2) - 放大到1.2倍
   z-index: 100 - 提高层级，确保在最顶层
   ============================================== */

/* 头像hover效果 */
.star:hover .star-avatar:hover {
    transform: translate(-50%, -50%) scale(1.2); /* 居中，放大1.2倍 */
    z-index: 100;                   /* 层级100，最顶层 */
}

/* ==============================================
   星星闪烁动画 - 基础呼吸效果
   ==============================================
   作用：让星星有自然的呼吸闪烁效果
   infinite - 无限循环
   ease-in-out - 缓入缓出，平滑的动画效果
   ============================================== */

/* 星星闪烁动画 - 基础动画 */
.star {
    animation: flash infinite ease-in-out; /* 基础闪烁动画，持续时间由JS动态设置 */
}

/* ==============================================
   不同等级星星的动画效果 - 根据等级调整动画参数
   ==============================================
   作用：不同等级的星星有不同的闪烁节奏
   微星：最慢的节奏（3.5s）
   超星：最快的节奏（1.8s）
   ============================================== */

/* 微星动画 - 最慢节奏 */
.star[data-level="微星"] {
    animation: flash-micro infinite ease-in-out; /* 微星专用，持续时间由JS动态设置 */
}

/* 小星动画 - 较慢节奏 */
.star[data-level="小星"] {
    animation: flash infinite ease-in-out; /* 基础动画，持续时间由JS动态设置 */
}

/* 中星动画 - 中等节奏 */
.star[data-level="中星"] {
    animation: flash infinite ease-in-out; /* 基础动画，持续时间由JS动态设置 */
}

/* 亮星动画 - 较快节奏 */
.star[data-level="亮星"] {
    animation: flash-bright infinite ease-in-out; /* 亮星专用，持续时间由JS动态设置 */
}

/* 超星动画 - 最快节奏 */
.star[data-level="超星"] {
    animation: flash-super infinite ease-in-out; /* 超星专用，持续时间由JS动态设置 */
}

/* ==============================================
   星星闪烁动画 - 增强的呼吸效果（标准版本）
   ==============================================
   作用：为普通星星创建四阶段呼吸动画
   特点：透明度、缩放、亮度同时变化，营造自然呼吸感
   0%和100%相同：确保动画循环无缝
   ============================================== */

/* 星星闪烁动画 - 增强的呼吸效果 */
@keyframes flash {
    0%, 100% {  /* 开始和结束状态 */
        opacity: 0.3;                  /* 透明度30% */
        transform: scale(1);           /* 正常大小 */
    }
    25% {  /* 第一阶段 */
        opacity: 0.5;                  /* 透明度50% */
        transform: scale(1.02);        /* 放大2% */
    }
    50% {  /* 中间状态，最亮 */
        opacity: 0.8;                  /* 完全不透明 */
        transform: scale(1.05);        /* 放大5% */
    }
    75% {  /* 第三阶段 */
        opacity: 0.5;                  /* 透明度50% */
        transform: scale(1.02);        /* 放大2% */
    }
}

/* ==============================================
   微星呼吸动画 - 轻柔节奏，最简单的动画
   ==============================================
   作用：为微星创建最轻柔的呼吸效果
   特点：只有两个关键点，变化幅度最小
   适合：最小的星星，营造宁静的感觉
   ============================================== */

/* 微星呼吸动画 - 轻柔节奏 */
@keyframes flash-micro {
    0%, 100% {  /* 开始和结束状态 */
        opacity: 0.2;                  /* 透明度20% */
        transform: scale(1);           /* 正常大小 */
    }
    50% {  /* 中间状态 */
        opacity: 0.5;                  /* 透明度50% */
        transform: scale(1.03);        /* 放大3% */
    }
}

/* ==============================================
   亮星呼吸动画 - 强烈脉动，四阶段变化
   ==============================================
   作用：为亮星创建更强烈的脉动效果
   特点：四个关键点，变化幅度更大
   最大亮度：1.5，最大缩放：1.08
   ============================================== */

/* 亮星呼吸动画 - 强烈脉动 */
@keyframes flash-bright {
    0%, 100% {  /* 开始和结束状态 */
        opacity: 0.5;                  /* 透明度50% */
        transform: scale(1);           /* 正常大小 */
    }
    20% {  /* 第一阶段 */
        opacity: 0.7;                  /* 透明度70% */
        transform: scale(1.03);        /* 放大3% */
    }
    50% {  /* 中间状态，最亮 */
        opacity: 1.0;                  /* 完全不透明 */
        transform: scale(1.08);        /* 放大8% */
    }
    80% {  /* 第三阶段 */
        opacity: 0.7;                  /* 透明度70% */
        transform: scale(1.03);        /* 放大3% */
    }
}

/* ==============================================
   超星呼吸动画 - 华丽脉动，最强烈的效果
   ==============================================
   作用：为超星创建最华丽的脉动效果
   特点：最大缩放1.1，最大亮度1.6
   透明度变化：0.7到1.0，营造高贵感
   ============================================== */

/* 超星呼吸动画 - 华丽脉动 */
@keyframes flash-super {
    0%, 100% {  /* 开始和结束状态 */
        opacity: 0.6;                  /* 透明度60% */
        transform: scale(1);           /* 正常大小 */
    }
    25% {  /* 第一阶段 */
        opacity: 0.8;                  /* 透明度80% */
        transform: scale(1.05);        /* 放大5% */
    }
    50% {  /* 中间状态，最亮 */
        opacity: 1.0;                  /* 完全不透明 */
        transform: scale(1.1);         /* 放大10% */
    }
    75% {  /* 第三阶段 */
        opacity: 0.8;                  /* 透明度80% */
        transform: scale(1.05);        /* 放大5% */
    }
}

/* ==============================================
   淡入淡出动画 - UI组件显示隐藏效果
   ==============================================
   作用：为界面元素提供平滑的显示和隐藏动画
   from和to：简化的关键帧写法，from是0%，to是100%
   translateY：垂直移动，营造从下方滑入滑出的效果
   ============================================== */

/* 淡入动画 - 从透明到不透明，从下方滑入 */
@keyframes fadeIn {
    from {  /* 开始状态 */
        opacity: 0;                    /* 完全透明 */
        transform: translateY(10px);   /* 向下偏移10px */
    }
    to {  /* 结束状态 */
        opacity: 1;                    /* 完全不透明 */
        transform: translateY(0);      /* 回到原位置 */
    }
}

/* 淡出动画 - 从不透明到透明，从原位置滑出 */
@keyframes fadeOut {
    from {  /* 开始状态 */
        opacity: 1;                    /* 完全不透明 */
        transform: translateY(0);      /* 原位置 */
    }
    to {  /* 结束状态 */
        opacity: 0;                    /* 完全透明 */
        transform: translateY(-10px);  /* 向上偏移10px */
    }
}

/* ==============================================
   超星特殊样式类 - 结合多种动画效果
   ==============================================
   作用：为超星提供额外的视觉效果
   特点：同时运行两种动画，营造更复杂的视觉效果
   animation: 多个动画用逗号分隔
   ============================================== */

/* 超星特殊样式类 - 结合呼吸效果 */
.star-super {
    animation: super-star-main-animation 6s infinite ease-in-out, flash-super 3.5s infinite ease-in-out;
    /* 同时运行两种动画：主元素动画6秒 + 呼吸动画3.5秒 */
}

/* ==============================================
   超星主元素动画 - 增强缩放效果
   ==============================================
   作用：为超星提供基础的缩放动画
   特点：简单的缩放变化，营造稳定的视觉存在感
   scale: 1.3到1.4，较小的变化幅度
   ============================================== */

/* 超星主元素动画 - 增强缩放效果 */
@keyframes super-star-main-animation {
    0%, 100% {  /* 开始和结束状态 */
        transform: scale(1.8);         /* 放大1.8倍 */
    }
    50% {  /* 中间状态 */
        transform: scale(1.9);         /* 放大1.9倍 */
    }
}

/* ==============================================
   星星hover基础效果 - 鼠标悬停时的通用样式
   ==============================================
   作用：所有星星悬停时的共同行为
   transition: 0.5秒缓动过渡
   animation-play-state: paused - 悬停时暂停动画
   !important: 提高样式优先级
   ============================================== */

/* 星星hover效果 - 根据等级调整放大倍数 */
.star:hover {
    transition: all 0.5s ease !important;  /* 所有属性变化使用0.5秒缓动 */
    z-index: 100 !important;               /* 提升到最高层级 */
    animation-play-state: paused !important; /* 暂停动画播放 */
}

/* ==============================================
   不同等级星星的hover放大效果 - 等级差异化
   ==============================================
   作用：根据星星等级显示不同的放大倍数
   中星最大：2.0倍，超星最小：1.4倍（因为本身就很大）
   !important: 确保覆盖其他样式
   ============================================== */

/* 微星hover放大 - 放大1.5倍 */
.star[data-level="微星"]:hover {
    transform: scale(1.5) !important;    /* 放大1.5倍 */
}

/* 小星hover放大 - 放大1.8倍 */
.star[data-level="小星"]:hover {
    transform: scale(1.8) !important;    /* 放大1.8倍 */
}

/* 中星hover放大 - 放大2.0倍（最大） */
.star[data-level="中星"]:hover {
    transform: scale(2.0) !important;    /* 放大2.0倍 */
}

/* 亮星hover放大 - 放大1.6倍 */
.star[data-level="亮星"]:hover {
    transform: scale(1.6) !important;    /* 放大1.6倍 */
}

/* 超星hover放大 - 放大2.2倍（调整后保持合理比例） */
.star[data-level="超星"]:hover {
    transform: scale(2.2) !important;    /* 放大2.2倍 */
}


/* ==============================================
   亮星额外光晕动画 - 增强亮星的视觉效果
   ==============================================
   作用：为亮星提供额外的光晕脉动效果
   特点：简单的缩放变化，配合透明度营造微妙的光效
   适合：作为亮星的辅助动画，增强视觉层次
   ============================================== */

/* 亮星额外光晕动画 */
@keyframes bright-star-extra-glow {
    0%, 100% {  /* 开始和结束状态 */
        opacity: 0.95;                  /* 透明度95% */
        transform: scale(1);            /* 正常大小 */
    }
    50% {  /* 中间状态 */
        opacity: 1;                     /* 完全不透明 */
        transform: scale(1.02);         /* 放大2% */
    }
}

/* ==============================================
   超星额外光晕动画 - 微妙的旋转和脉动
   ==============================================
   作用：为超星提供旋转和缩放的复杂动画效果
   特点：结合旋转和缩放，营造更高级的视觉效果
   rotate: 左右轻微旋转，营造动态感
   scale: 微妙的缩放变化
   ============================================== */

/* 超星额外光晕动画 - 微妙的旋转和脉动 */
@keyframes super-star-extra-glow {
    0% {  /* 起始状态 */
        opacity: 1;                     /* 完全不透明 */
        transform: scale(1) rotate(0deg); /* 正常大小，不旋转 */
    }
    25% { /* 第一阶段 */
        opacity: 1;                     /* 保持不透明 */
        transform: scale(1.03) rotate(5deg); /* 放大3%，右转5度 */
    }
    50% { /* 中间状态 */
        opacity: 1;                     /* 保持不透明 */
        transform: scale(1.05) rotate(0deg); /* 放大5%，回到0度 */
    }
    75% { /* 第三阶段 */
        opacity: 1;                     /* 保持不透明 */
        transform: scale(1.03) rotate(-5deg); /* 放大3%，左转5度 */
    }
    100% { /* 结束状态 */
        opacity: 1;                     /* 保持不透明 */
        transform: scale(1) rotate(0deg); /* 回到正常大小和角度 */
    }
}

/* ==============================================
   信息面板样式 - 页面信息展示面板
   ==============================================
   作用：显示页面功能介绍和使用说明
   position: absolute - 固定在页面底部
   background: 半透明黑色背景
   border-radius: 16px - 圆角设计
   ============================================== */

/* 信息面板样式 */
.starsky-info {
    position: absolute;                  /* 绝对定位 */
    bottom: 30px;                       /* 距离底部30px */
    left: 30px;                         /* 距离左侧30px */
    right: 30px;                        /* 距离右侧30px */
    background: rgba(0, 0, 0, 0.7);    /* 半透明黑色背景 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 白色半透明边框 */
    border-radius: 16px;                /* 圆角16px */
    padding: 24px;                      /* 内边距24px */
    color: white;                       /* 白色文字 */
    z-index: 5;                         /* 层级5 */
}

/* ==============================================
   面板标题样式 - 使用渐变文字效果
   ==============================================
   background: linear-gradient - 线性渐变背景
   -webkit-background-clip: text - 背景裁剪为文字形状
   -webkit-text-fill-color: transparent - 文字填充透明
   ============================================== */

.starsky-info h2 {
    font-size: 28px;                    /* 字体大小28px */
    font-weight: bold;                  /* 粗体 */
    margin-bottom: 12px;                /* 下边距12px */
    background: linear-gradient(45deg, #ffffff, #f0f0f0);
    /* 45度线性渐变，从白色到浅灰色 */
    -webkit-background-clip: text;      /* 背景裁剪为文字形状 */
    -webkit-text-fill-color: transparent; /* 文字填充色透明，显示背景渐变 */
    background-clip: text;              /* 标准语法 */
}

/* ==============================================
   面板段落样式 - 正文内容
   ==============================================
   color: 半透明白色文字
   margin-bottom: 段落间距
   ============================================== */

.starsky-info p {
    font-size: 16px;                    /* 字体大小16px */
    color: rgba(255, 255, 255, 0.8);   /* 半透明白色 */
    margin-bottom: 20px;                /* 下边距20px */
}

/* ==============================================
   功能列表样式 - 使用CSS Grid布局
   ==============================================
   display: grid - 网格布局
   grid-template-columns: 自适应列，自动填充，最小200px
   gap: 网格间距12px
   ============================================== */

/* 功能列表样式 */
.feature-list {
    display: grid;                      /* 网格布局 */
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    /* 自动填充列，每列最小200px，最大平分剩余空间 */
    gap: 12px;                         /* 网格间距12px */
}

/* ==============================================
   功能项样式 - 单个功能展示
   ==============================================
   display: flex - 弹性布局
   align-items: center - 垂直居中
   gap: 元素间距8px
   ============================================== */

.feature-item {
    display: flex;                      /* 弹性布局 */
    align-items: center;                /* 垂直居中对齐 */
    gap: 8px;                          /* 元素间距8px */
    padding: 8px 12px;                 /* 内边距 */
    background: rgba(255, 255, 255, 0.1); /* 半透明白色背景 */
    border-radius: 8px;                /* 圆角8px */
    border: 1px solid rgba(255, 255, 255, 0.1); /* 半透明白色边框 */
}

/* ==============================================
   功能图标样式 - 表情符号或图标
   ==============================================
   font-size: 图标大小18px
   opacity: 透明度0.8
   ============================================== */

.feature-icon {
    font-size: 18px;                   /* 图标大小18px */
    opacity: 0.8;                      /* 透明度80% */
}

/* ==============================================
   隐藏按钮样式 - 面板右上角的关闭按钮
   ==============================================
   作用：点击隐藏信息面板
   position: absolute - 相对于面板定位
   border-radius: 50% - 圆形按钮
   display: flex - 弹性布局居中内容
   ============================================== */

/* 隐藏按钮样式 */
.info-toggle {
    position: absolute;                  /* 绝对定位 */
    top: 12px;                          /* 距离顶部12px */
    right: 12px;                        /* 距离右侧12px */
    width: 32px;                        /* 宽度32px */
    height: 32px;                       /* 高度32px */
    background: rgba(255, 255, 255, 0.1); /* 半透明白色背景 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 半透明白色边框 */
    border-radius: 50%;                 /* 圆角50%，圆形 */
    display: flex;                      /* 弹性布局 */
    align-items: center;                /* 垂直居中 */
    justify-content: center;            /* 水平居中 */
    cursor: pointer;                    /* 鼠标指针为手型 */
    transition: all 0.3s ease;          /* 过渡动画 */
    z-index: 10;                        /* 层级10 */
    font-size: 18px;                    /* 字体大小18px */
    color: rgba(255, 255, 255, 0.8);   /* 半透明白色 */
}

/* ==============================================
   隐藏按钮悬停效果 - 鼠标悬停时的视觉反馈
   ==============================================
   background: 增加背景透明度
   border-color: 边框颜色更亮
   ============================================== */

.info-toggle:hover {
    background: rgba(255, 255, 255, 0.2); /* 背景更亮 */
    border-color: rgba(255, 255, 255, 0.4); /* 边框更亮 */
}

/* ==============================================
   面板隐藏状态 - 面板被隐藏时的样式
   ==============================================
   opacity: 0 - 完全透明
   transform: translateX(-100%) - 向左滑出屏幕
   pointer-events: none - 禁用鼠标事件
   ============================================== */

/* 面板隐藏状态 */
.starsky-info.hidden {
    opacity: 0;                         /* 完全透明 */
    transform: translateX(-100%);       /* 向左滑出屏幕 */
    pointer-events: none;               /* 禁用鼠标事件 */
}

/* ==============================================
   显示按钮样式 - 当面板隐藏时显示的展开按钮
   ==============================================
   作用：点击重新显示信息面板
   position: fixed - 固定定位，不随页面滚动
   display: none - 默认隐藏
   z-index: 100 - 最高层级
   ============================================== */

/* 显示按钮样式 */
.show-info-btn {
    position: fixed;                    /* 固定定位 */
    bottom: 30px;                       /* 距离底部30px */
    left: 30px;                         /* 距离左侧30px */
    width: 48px;                        /* 宽度48px */
    height: 48px;                       /* 高度48px */
    background: rgba(0, 0, 0, 0.7);    /* 半透明黑色背景 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 白色半透明边框 */
    border-radius: 50%;                 /* 圆角50%，圆形 */
    display: none;                      /* 默认隐藏 */
    align-items: center;                /* 垂直居中 */
    justify-content: center;            /* 水平居中 */
    cursor: pointer;                    /* 鼠标指针为手型 */
    transition: all 0.3s ease;          /* 过渡动画 */
    z-index: 100;                       /* 层级100，最高 */
    font-size: 20px;                    /* 字体大小20px */
    color: rgba(255, 255, 255, 0.8);   /* 半透明白色 */
}

/* ==============================================
   显示按钮悬停效果 - 鼠标悬停时的视觉反馈
   ==============================================
   background: 背景颜色加深
   border-color: 边框颜色更亮
   ============================================== */

.show-info-btn:hover {
    background: rgba(0, 0, 0, 0.8);    /* 背景颜色加深 */
    border-color: rgba(255, 255, 255, 0.4); /* 边框更亮 */
}

/* ==============================================
   显示按钮显示状态 - 当面板隐藏时显示按钮
   ==============================================
   display: flex - 显示按钮并使用弹性布局
   ============================================== */

.show-info-btn.show {
    display: flex;                     /* 显示按钮 */
}

/* ==============================================
   星星筛选按钮容器样式 - 右上角筛选功能
   ==============================================
   作用：提供星星等级筛选功能
   position: fixed - 固定在右上角
   z-index: 50 - 较高层级
   ============================================== */

/* 星星筛选按钮样式 */
.star-filter {
    position: fixed;                    /* 固定定位 */
    top: 30px;                          /* 距离顶部30px */
    right: 30px;                        /* 距离右侧30px */
    z-index: 50;                        /* 层级50 */
}

/* ==============================================
   筛选切换按钮样式 - 主要的筛选按钮
   ==============================================
   作用：点击展开或收起筛选面板
   样式与显示按钮类似，但位置不同
   ============================================== */

.filter-toggle {
    width: 48px;                        /* 宽度48px */
    height: 48px;                       /* 高度48px */
    background: rgba(0, 0, 0, 0.7);    /* 半透明黑色背景 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 白色半透明边框 */
    border-radius: 50%;                 /* 圆角50%，圆形 */
    display: flex;                      /* 弹性布局 */
    align-items: center;                /* 垂直居中 */
    justify-content: center;            /* 水平居中 */
    cursor: pointer;                    /* 鼠标指针为手型 */
    transition: all 0.3s ease;          /* 过渡动画 */
    font-size: 20px;                    /* 字体大小20px */
    color: rgba(255, 255, 255, 0.8);   /* 半透明白色 */
}

/* ==============================================
   筛选按钮悬停效果 - 鼠标悬停时的视觉反馈
   ==============================================
   background: 背景颜色加深
   border-color: 边框颜色更亮
   ============================================== */

.filter-toggle:hover {
    background: rgba(0, 0, 0, 0.8);    /* 背景颜色加深 */
    border-color: rgba(255, 255, 255, 0.4); /* 边框更亮 */
}

/* ==============================================
   筛选面板样式 - 下拉式筛选菜单
   ==============================================
   作用：显示星星等级筛选选项
   position: absolute - 相对于筛选按钮定位
   默认隐藏：opacity: 0, visibility: hidden
   transform: translateY(-10px) - 向上偏移，准备下拉动画
   ============================================== */

.filter-panel {
    position: absolute;                  /* 绝对定位 */
    top: 60px;                          /* 距离顶部60px */
    right: 0;                           /* 右对齐 */
    width: 280px;                       /* 宽度280px */
    background: rgba(0, 0, 0, 0.8);    /* 半透明黑色背景 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 白色半透明边框 */
    border-radius: 12px;                /* 圆角12px */
    padding: 20px;                      /* 内边距20px */
    opacity: 0;                         /* 默认透明 */
    visibility: hidden;                 /* 默认隐藏 */
    transform: translateY(-10px);       /* 向上偏移10px */
    transition: all 0.3s ease;          /* 过渡动画 */
    z-index: 100;                       /* 层级100，最高 */
}

/* ==============================================
   筛选面板显示状态 - 面板展开时的样式
   ==============================================
   opacity: 1, visibility: visible - 显示面板
   transform: translateY(0) - 回到原位置
   ============================================== */

.filter-panel.show {
    opacity: 1;                         /* 显示面板 */
    visibility: visible;                /* 可见 */
    transform: translateY(0);           /* 回到原位置 */
}

/* ==============================================
   筛选面板标题样式 - 面板顶部的标题
   ==============================================
   font-weight: bold - 加粗显示
   text-align: center - 居中对齐
   margin-bottom: 16px - 下边距
   ============================================== */

.filter-title {
    font-size: 16px;                    /* 字体大小16px */
    font-weight: bold;                  /* 粗体 */
    color: white;                       /* 白色文字 */
    margin-bottom: 16px;                /* 下边距16px */
    text-align: center;                 /* 居中对齐 */
}

/* ==============================================
   筛选选项容器样式 - 包含所有筛选选项
   ==============================================
   display: flex - 弹性布局
   flex-direction: column - 垂直排列
   gap: 8px - 选项间距
   ============================================== */

.filter-options {
    display: flex;                      /* 弹性布局 */
    flex-direction: column;             /* 垂直排列 */
    gap: 8px;                          /* 元素间距8px */
    margin-bottom: 20px;               /* 下边距20px */
}

/* ==============================================
   筛选选项样式 - 单个筛选选项
   ==============================================
   display: flex - 弹性布局
   align-items: center - 垂直居中
   gap: 12px - 元素间距
   cursor: pointer - 鼠标指针为手型
   ============================================== */

.filter-option {
    display: flex;                      /* 弹性布局 */
    align-items: center;                /* 垂直居中 */
    gap: 12px;                         /* 元素间距12px */
    padding: 10px;                     /* 内边距10px */
    background: rgba(255, 255, 255, 0.1); /* 半透明白色背景 */
    border-radius: 8px;                /* 圆角8px */
    cursor: pointer;                    /* 鼠标指针为手型 */
    transition: all 0.2s ease;          /* 过渡动画 */
}

/* ==============================================
   筛选选项悬停效果 - 鼠标悬停时的视觉反馈
   ==============================================
   background: 背景颜色稍亮
   ============================================== */

.filter-option:hover {
    background: rgba(255, 255, 255, 0.15); /* 背景稍亮 */
}

/* ==============================================
   筛选选项选中状态 - 被选中的选项样式
   ==============================================
   background: 蓝色背景表示选中
   border: 蓝色边框强调选中状态
   ============================================== */

.filter-option.selected {
    background: rgba(100, 150, 255, 0.3); /* 蓝色背景 */
    border: 1px solid rgba(100, 150, 255, 0.5); /* 蓝色边框 */
}

/* ==============================================
   筛选复选框样式 - 自定义复选框外观
   ==============================================
   作用：提供自定义样式的复选框
   position: relative - 为伪元素提供定位基准
   border-radius: 3px - 轻微圆角
   transition: all 0.2s ease - 平滑过渡
   ============================================== */

.filter-checkbox {
    width: 18px;                        /* 宽度18px */
    height: 18px;                       /* 高度18px */
    border: 2px solid rgba(255, 255, 255, 0.5); /* 白色半透明边框 */
    border-radius: 3px;                 /* 圆角3px */
    position: relative;                 /* 相对定位 */
    transition: all 0.2s ease;          /* 过渡动画 */
}

/* ==============================================
   复选框选中状态 - 被选中时的外观
   ==============================================
   background: 蓝色背景
   border-color: 蓝色边框
   ============================================== */

.filter-checkbox.checked {
    background: #6496ff;                /* 蓝色背景 */
    border-color: #6496ff;              /* 蓝色边框 */
}

/* ==============================================
   复选框选中标记 - 显示对勾符号
   ==============================================
   content: '✓' - 显示对勾字符
   position: absolute - 绝对定位在复选框中心
   transform: translate(-50%, -50%) - 居中对齐
   ============================================== */

.filter-checkbox.checked::after {
    content: '✓';                       /* 显示对勾符号 */
    position: absolute;                 /* 绝对定位 */
    top: 50%;                           /* 距离顶部50% */
    left: 50%;                          /* 距离左侧50% */
    transform: translate(-50%, -50%);   /* 向左上移动50%，实现居中 */
    color: white;                       /* 白色文字 */
    font-size: 12px;                    /* 字体大小12px */
    font-weight: bold;                  /* 粗体 */
}

/* ==============================================
   筛选选项信息容器 - 包含名称和描述
   ==============================================
   flex: 1 - 占据剩余空间
   ============================================== */

.filter-option-info {
    flex: 1;                            /* 占据剩余空间 */
}

/* ==============================================
   筛选选项名称样式 - 星星等级名称
   ==============================================
   font-weight: 500 - 中等粗细
   color: white - 白色文字
   ============================================== */

.filter-option-name {
    font-size: 14px;                    /* 字体大小14px */
    color: white;                       /* 白色文字 */
    font-weight: 500;                   /* 中等粗细 */
}

/* ==============================================
   筛选选项描述样式 - 星星等级描述
   ==============================================
   color: 半透明白色
   margin-top: 2px - 上边距
   ============================================== */

.filter-option-detail {
    font-size: 12px;                    /* 字体大小12px */
    color: rgba(255, 255, 255, 0.6);   /* 半透明白色 */
    margin-top: 2px;                    /* 上边距2px */
}

/* ==============================================
   筛选操作按钮容器 - 确定和取消按钮的容器
   ==============================================
   display: flex - 弹性布局
   justify-content: center - 居中对齐
   gap: 8px - 按钮间距
   ============================================== */

.filter-actions {
    display: flex;                      /* 弹性布局 */
    gap: 8px;                          /* 元素间距8px */
    justify-content: center;            /* 居中对齐 */
}

/* ==============================================
   筛选按钮基础样式 - 确定和取消按钮的共同样式
   ==============================================
   padding: 8px 16px - 内边距
   border-radius: 6px - 圆角6px
   cursor: pointer - 鼠标指针为手型
   ============================================== */

.filter-btn {
    padding: 8px 16px;                 /* 内边距 */
    background: rgba(255, 255, 255, 0.1); /* 半透明白色背景 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* 白色半透明边框 */
    border-radius: 6px;                /* 圆角6px */
    color: white;                      /* 白色文字 */
    font-size: 13px;                   /* 字体大小13px */
    cursor: pointer;                   /* 鼠标指针为手型 */
    transition: all 0.2s ease;         /* 过渡动画 */
}

/* ==============================================
   筛选按钮悬停效果 - 鼠标悬停时的视觉反馈
   ==============================================
   background: 背景颜色稍亮
   border-color: 边框颜色更亮
   ============================================== */

.filter-btn:hover {
    background: rgba(255, 255, 255, 0.2); /* 背景稍亮 */
    border-color: rgba(255, 255, 255, 0.4); /* 边框更亮 */
}

/* ==============================================
   主要筛选按钮样式 - 确定按钮的特殊样式
   ==============================================
   background: 蓝色背景
   border-color: 蓝色边框
   ============================================== */

.filter-btn.primary {
    background: #6496ff;                /* 蓝色背景 */
    border-color: #6496ff;              /* 蓝色边框 */
}

/* ==============================================
   主要筛选按钮悬停效果 - 确定按钮的悬停状态
   ==============================================
   background: 更深的蓝色
   border-color: 更深的蓝色
   ============================================== */

.filter-btn.primary:hover {
    background: #4a7eff;                /* 更深的蓝色 */
    border-color: #4a7eff;              /* 更深的蓝色边框 */
}

/* ==============================================
   iframe弹窗动画效果
   ============================================== */

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes popupSlideIn {
    from {
        opacity: 0;
        transform: scale(0.8) translateY(-20px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

@keyframes popupSlideOut {
    from {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
    to {
        opacity: 0;
        transform: scale(0.9) translateY(10px);
    }
}

/* iframe弹窗样式 */
#iframe-popup {
    animation: fadeIn 0.3s ease;
}

#iframe-popup.fade-out {
    animation: fadeOut 0.3s ease;
}

/* 弹窗内容样式 */
#iframe-popup > div {
    animation: popupSlideIn 0.3s ease;
}

#iframe-popup.fade-out > div {
    animation: popupSlideOut 0.3s ease;
}

/* tooltip按钮样式 */
.tooltip-btn {
    transition: all 0.2s ease;
    border: 1px solid transparent;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.tooltip-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

.tooltip-btn:active {
    transform: translateY(0);
    box-shadow: 0 1px 4px rgba(0,0,0,0.2);
}

.visit-btn:hover {
    background: #45a049 !important;
}

.preview-btn:hover {
    background: #1976D2 !important;
}

/* 响应式设计 */
@media (max-width: 768px) {
    #iframe-popup > div {
        width: 95% !important;
        height: 90% !important;
        max-width: none !important;
        max-height: none !important;
    }

    #iframe-popup iframe {
        border-radius: 0 !important;
    }
}

@media (max-width: 480px) {
    #iframe-popup > div {
        width: 98% !important;
        height: 95% !important;
    }

    .tooltip-btn {
        padding: 3px 6px !important;
        font-size: 10px !important;
    }
}

